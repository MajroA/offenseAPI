input {
  file {
    type => "odtah-brno"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    #path => "/var/data/prestupky/Brno_odtahy_1_6_2013_16_9_2014.csv"
    path => "/var/data/prestupky/Brno_demo.csv"
  }
  file {
    type => "prestupek-brno"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    #path => "/var/data/prestupky/Brno_prestupky_1_6_2013_16_9_2014.csv"
    path => "/var/data/prestupky/Brno_demo.csv"
  }
  file {
    type => "rychlost-brno"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    #path => "/var/data/prestupky/Brno_rychlost_1_6_2013_16_9_2014.csv"
    path => "/var/data/prestupky/Brno_demo.csv"
  }  
}

filter {
  grok {
    break_on_match => true
    patterns_dir => ["./patterns"]      
    match => [ 
      "message", "%{TIMESTAMP_ISO8601:[time][caseStart]};%{NOT_SEMICOLON:placeTrash};%{GREEDYDATA:caseTypeTrash}",
      "message", "%{TIMESTAMP_US:[time][caseStart]};%{NOT_SEMICOLON:placeTrash};%{GREEDYDATA:caseTypeTrash}"
    ]
  }
  mutate {
    gsub => [
      "placeTrash","\"","",
      "caseTypeTrash","\"",""
    ]
  }
  grok {
    break_on_match => true
    patterns_dir => ["./patterns"]
    match => [ 
      "placeTrash", "%{NOT_NUMBER:[place][streetName]}%{NOT_COMMA:[place][partOfStreet]},%{GREEDYDATA:[place][city]}",
      "placeTrash", "%{NOT_COMMA:[place][streetName]},%{GREEDYDATA:[place][city]}"
    ]
  }
  grok {
    break_on_match => true
    patterns_dir => ["./patterns"]
    match => [ 
      "caseTypeTrash", "\|?%{PARAGRAPH:[caseType][type]}%{GREEDYDATA:trash}%{LETTER:[caseType][detail]}%{GREEDYDATA:trash}",
      "caseTypeTrash", "%{GREEDYDATA:[caseType][type]}"
    ]
  }
  mutate {
    strip => ["[place][streetName]", "[place][city]"]
    remove_field => ["path", "host", "trash", "placeTrash", "caseTypeTrash"]
    convert => [ "[place][location][lat]", "float" ]
    convert => [ "[place][location][lon]", "float" ]
    convert => [ "[solution][fine][amount]", "integer" ]
    convert => [ "[offender][yearOfBirth]", "integer" ]
  }     
  date {
    match => ["[time][caseStart]", "ISO8601", "MM/dd/yy hh:mm a", "YY-MM-dd HH:mm:ss.SSS"]
  }
}

output {
#    elasticsearch_http {
#      host => "178.62.201.139"
#      port => 9201
#      index => "prestupky-debug"
#    }
    file { 
        path => "/var/data/prestupky/results/brno.json"
        flush_interval => 0
    }
}
