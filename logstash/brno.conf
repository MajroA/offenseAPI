input {
  file {
    type => "odtah-brno"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    path => "/var/data/prestupky/Brno_odtahy_1_6_2013_16_9_2014.csv"
    #path => "/var/data/prestupky/Brno_demo.csv"
    #path => "/var/data/prestupky/empty.csv"
  }
  file {
    type => "prestupek-brno"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    path => "/var/data/prestupky/Brno_prestupky_1_6_2013_16_9_2014.csv"
    #path => "/var/data/prestupky/Brno_demo.csv"
    #path => "/var/data/prestupky/empty.csv"
  }
  file {
    type => "rychlost-brno"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    path => "/var/data/prestupky/Brno_rychlost_1_6_2013_16_9_2014.csv"
    #path => "/var/data/prestupky/Brno_demo.csv"
    #path => "/var/data/prestupky/empty.csv"
  }  
}

filter {
  if [message] =~ /^#/ { 
    drop { } 
  }
  csv {
    columns => ["timeTemp","placeTemp","caseTypeTemp"]
    separator => ";"
#quote char has to be something else than default " as that is contained in the data
    quote_char => "~" 
  }  
  grok {
    break_on_match => true
    patterns_dir => ["./patterns"]
    match => [ 
      "placeTemp", "%{STREET_NAME:[place][streetName]}%{STREET_NUMBER:[place][partOfStreet]},%{GREEDYDATA:[place][city]}",
      "placeTemp", "%{NOT_COMMA:[place][streetName]},%{GREEDYDATA:[place][city]}"
    ]
  }
  grok {
    break_on_match => true
    patterns_dir => ["./patterns"]
    match => [ 
      "caseTypeTemp", "%{NOTPARAGRAPH}%{PARAGRAPH:[caseType][type]}%{LETTER:[caseType][detail]}%{GREEDYDATA:trash}",
      "caseTypeTemp", "%{NOTPARAGRAPH}%{PARAGRAPH:[caseType][type]}%{GREEDYDATA:trash}",
      "caseTypeTemp", "%{GREEDYDATA:[caseType][type]}"
    ]
  }
  date {
    match => ["timeTemp", "MM/dd/yy hh:mm a", "YY-MM-dd HH:mm:ss.SSS"]
    target => "[time][caseStart]"
    timezone => "Europe/Prague"
  }
  date {
    match => ["timeTemp", "MM/dd/yy hh:mm a", "YY-MM-dd HH:mm:ss.SSS"]
    timezone => "Europe/Prague"
  }
  mutate {
    strip => ["[place][streetName]", "[place][city]", "[caseType][type]", "[caseType][detail]"]
    remove_field => ["path", "host", "trash", "timeTemp", "placeTemp", "caseTypeTemp"]
  }     
}

output {
    elasticsearch_http {
      host => "178.62.201.139"
      port => 9201
      index => "prestupky"
    }
#    elasticsearch_http {
#      host => "localhost"
#      port => 9200
#      index => "prestupky-debug"
#    }
    file { 
        path => "/var/data/prestupky/results/brno.json"
        flush_interval => 0
    }
}
